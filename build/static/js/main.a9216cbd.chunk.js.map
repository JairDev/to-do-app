{"version":3,"sources":["components/Task/Task.jsx","components/Favorite/Favorite.jsx","components/FilterTask/FilterTask.jsx","components/Todo/Todo.jsx","components/FilterDate/FilterDate.jsx","App.js","reportWebVitals.js","index.js"],"names":["Task","objTask","handleClickFavorite","handleClickDelete","handleClickSave","handleClickComplete","handleClickEdit","favoriteIconRef","useRef","spanCompletedStyle","isCheckedStyle","refTask","useState","editTask","setEditTask","inputRef","useEffect","svg","current","span","task","check","favorite","classList","add","remove","completed","checked","selected","ref","className","date","id","data-taskid","onClick","e","type","onSubmit","preventDefault","name","value","edit","text","onChange","target","readOnly","xlinkHref","Favorite","favoriteArr","map","FilterTask","handleFilterTask","htmlFor","Todo","taskList","FilterDate","handleFilterDate","placeholder","App","JSON","parse","localStorage","getItem","setTask","setItem","stringify","useSaveTask","setFavorite","useSaveAll","allTask","setAllTask","useSaveFavorite","refInput","console","log","currentTarget","dataset","taskid","newArr","filter","newArrFavorite","to","path","filterFavorite","lastChild","regex","RegExp","match","isFavorite","editCompleted","objIsComplete","document","getElementById","removeAttribute","isEdit","Date","taskText","taskObject","toLocaleString","arrTask","concat","handleSubmit","isSelected","selectedFilter","nodeTask","querySelectorAll","Array","from","style","isAllSelected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9216cbd.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Task.css\";\n\nconst Task = ({\n  objTask,\n  handleClickFavorite,\n  handleClickDelete,\n  handleClickSave,\n  handleClickComplete,\n  handleClickEdit,\n}) => {\n  const favoriteIconRef = useRef(null);\n  const spanCompletedStyle = useRef(null);\n  const isCheckedStyle = useRef(null);\n  const refTask = useRef(null);\n  const [editTask, setEditTask] = useState(\"\");\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const svg = favoriteIconRef.current;\n    const span = spanCompletedStyle.current;\n    const task = refTask.current;\n    let check = isCheckedStyle.current;\n\n    objTask.favorite\n      ? svg.classList.add(\"selected\")\n      : svg.classList.remove(\"selected\");\n\n    objTask.completed\n      ? span.classList.add(\"line-completed\")\n      : span.classList.remove(\"line-completed\");\n\n    objTask.completed ? (check.checked = true) : (check.checked = false);\n\n    objTask.favorite && objTask.selected\n      ? task.classList.add(\"selected-favorite\")\n      : task.classList.remove(\"selected-favorite\");\n\n    objTask.completed && objTask.selected\n      ? task.classList.add(\"selected-completed\")\n      : task.classList.remove(\"selected-completed\");\n\n    !objTask.completed && objTask.selected\n      ? task.classList.add(\"selected-not-completed\")\n      : task.classList.remove(\"selected-not-completed\");\n  }, [objTask.completed, objTask.favorite, objTask.selected]);\n\n  const handleChange = (e) => {\n    setEditTask(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div ref={refTask} className=\"App-task\">\n      <span className=\"date-task\">{objTask.date}</span>\n      <span ref={spanCompletedStyle} className=\"style-completed\"></span>\n      <div className=\"App-check-completed\">\n        <form>\n          <input\n            id=\"input-check\"\n            ref={isCheckedStyle}\n            data-taskid={objTask.id}\n            onClick={(e) => handleClickComplete(e, objTask)}\n            type=\"checkbox\"\n          />\n        </form>\n      </div>\n      <div className=\"App-task-edit\">\n        <form onSubmit={handleSubmit}>\n          <input\n            id=\"input-task-edit\"\n            type=\"text\"\n            name=\"task-edit\"\n            value={objTask.edit ? editTask : objTask.text}\n            onChange={handleChange}\n            readOnly=\"readonly\"\n            ref={inputRef}\n          />\n        </form>\n      </div>\n\n      <div className=\"content-icon-favorite action-task\">\n        <span\n          onClick={(e) => handleClickFavorite(e, objTask)}\n          className=\"icon-favorite\"\n        >\n          <svg ref={favoriteIconRef} className=\"icon icon-star-empty\">\n            <use xlinkHref=\"#icon-star-empty\"></use>\n          </svg>\n        </span>\n      </div>\n\n      <div className=\"content-editar action-task\">\n        <form>\n          <button onClick={(e) => handleClickEdit(e, objTask, editTask)}>\n            {objTask.edit ? \"Guardar\" : \"Editar\"}\n          </button>\n        </form>\n      </div>\n\n      <div className=\"content-guardar action-task\">\n        <form>\n          <button\n            data-taskid={objTask.id}\n            onClick={(e) => handleClickSave(e, editTask, objTask)}\n          >\n            Guardar\n          </button>\n        </form>\n      </div>\n\n      <div className=\"content-icon-delete action-task\">\n        <span\n          data-taskid={objTask.id}\n          onClick={handleClickDelete}\n          className=\"icon-delete\"\n        >\n          <svg className=\"icon icon-bin\">\n            <use xlinkHref=\"#icon-bin\"></use>\n          </svg>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"../Task/Task\";\n\nconst Favorite = ({ favoriteArr, handleClickDelete }) => {\n  // console.log(favoriteArr);\n  // if(!favoriteArr.length) return <div className=\"no-favorite\">Sin favoritos</div>\n  \n  return (\n    <section className=\"App-favorite-section\">\n      {favoriteArr.map((task) => (\n        task.favorite ? \n        <Task\n          key={task.text}\n          objTask={task}\n          // handleClickFavorite={handleClickFavorite}\n          handleClickDelete={handleClickDelete}\n          // handleClickSave={handleClickSave}\n          // handleClickComplete={handleClickComplete}\n        />\n        : null\n      ))}\n    </section>\n  );\n};\n\nexport default Favorite;\n","import React from \"react\"\nimport \"./FilterTask.css\"\n\nconst FilterTask = ({handleFilterTask}) => {  \n  return (\n    <div className=\"App-content-filter\">\n      <form>\n        <input onChange={handleFilterTask} id=\"filter-check\" type=\"checkbox\"/>\n        <label htmlFor=\"filter-check\">Favoritos</label>\n      </form>\n    </div>\n  )\n}\n\nexport default FilterTask","import React from \"react\";\nimport Task from \"../Task/Task\";\nimport \"./Todo.css\";\n\nconst Todo = ({\n  taskList,\n  handleClickFavorite,\n  handleClickDelete,\n  handleClickSave,\n  handleClickComplete,\n  handleClickEdit\n}) => {\n  // if(!taskList.length) return <div className=\"empty-task\">Sin tareas</div>\n  return (\n    <section className=\"App-todo-list\">\n      {taskList.map((task) => (\n        <Task\n          key={task.text}\n          objTask={task}\n          handleClickFavorite={handleClickFavorite}\n          handleClickDelete={handleClickDelete}\n          handleClickSave={handleClickSave}\n          handleClickComplete={handleClickComplete}\n          handleClickEdit={handleClickEdit}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport \"./FilterDate.css\"\nconst FilterDate = ({ favoriteArr, handleFilterDate }) => {\n\n  return (\n    <div className=\"App-content-filter-date\">\n      <form onSubmit={(e) => handleFilterDate(e)}>\n        <label htmlFor=\"filter-check\">Buscar por Día</label>\n        <input  placeholder=\"Ingresa un día\"  id=\"filter-check-date\" type=\"text\"/>\n      </form>\n    </div>\n  )\n};\n\nexport default  FilterDate;","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import Home, { useSaveFavorite, useSaveTask } from \"./pages/Home/Home\";\nimport Favorite from \"./components/Favorite/Favorite\";\nimport FilterTask from \"./components/FilterTask/FilterTask\";\nimport Todo from \"./components/Todo/Todo\";\nimport { useRef, useState } from \"react\";\nimport FilterDate from \"./components/FilterDate/FilterDate\";\n\nexport const useSaveTask = () => {\n  const [task, setTask] = useState(\n    JSON.parse(localStorage.getItem(\"task\")) || []\n  );\n\n  localStorage.setItem(\"task\", JSON.stringify(task));\n  return [task, setTask];\n};\n\nexport const useSaveFavorite = () => {\n  const [favorite, setFavorite] = useState(\n    JSON.parse(localStorage.getItem(\"favorite\")) || []\n  );\n\n  localStorage.setItem(\"favorite\", JSON.stringify(favorite));\n  return [favorite, setFavorite];\n};\n\nexport const useSaveAll = () => {\n  const [favorite, setFavorite] = useState(\n    JSON.parse(localStorage.getItem(\"alltask\")) || []\n  );\n\n  localStorage.setItem(\"alltask\", JSON.stringify(favorite));\n  return [favorite, setFavorite];\n};\n\nfunction App() {\n  const [task, setTask] = useSaveTask();\n  const [allTask, setAllTask] = useSaveAll();\n  const [favorite, setFavorite] = useSaveFavorite();\n  const refInput = useRef(null);\n\n  const handleSubmit = (e) => {\n    const date = new Date();\n    const taskText = refInput.current.value;\n    const taskObject = {\n      id: taskText,\n      text: taskText,\n      completed: false,\n      favorite: false,\n      selected: false,\n      edit: false,\n      date: date.toLocaleString(),\n    };\n    const arrTask = task.concat([taskObject]);\n    setAllTask(arrTask)\n    setTask(arrTask);\n    refInput.current.value = \"\";\n    e.preventDefault();\n  };\n\n  const handleClickComplete = (e) => {\n    const id = e.target.dataset.taskid;\n    const objIsComplete = task.map((task) =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTask(objIsComplete);\n  };\n\n  const handleClickFavorite = (e, objTask) => {\n    const id = objTask.id;\n    const isFavorite = task.map((task) =>\n      task.id === id ? { ...task, favorite: !task.favorite } : task\n    );\n\n    setTask(isFavorite);\n    setFavorite(isFavorite)\n    setAllTask(isFavorite)\n  };\n\n  const handleClickDelete = (e) => {\n    console.log(e)\n    const id = e.currentTarget.dataset.taskid;\n    const newArr = task.filter((task) => task.id !== id);\n    const newArrFavorite = favorite.filter((task) => task.id !== id);\n    setTask(newArr);\n    setFavorite(newArrFavorite)\n  };\n\n  const handleSelectFavorites = (e) => {\n    const isSelected = task.map((task) =>\n      task.favorite ? { ...task, selected: !task.selected } : task\n    );\n    \n    setTask(isSelected);\n  };\n\n  const handleDeleteSelect = (e) => {\n    const selectedFilter = task.filter((task) => !task.selected);\n    setTask(selectedFilter);\n  };\n\n  const handleSelectCompleted = (e) => {\n    const isSelected = task.map((task) =>\n      task.completed ? { ...task, selected: !task.selected } : task\n    );\n    console.log(isSelected);\n    setTask(isSelected);\n  };\n\n  const handleSelectNotCompleted = (e) => {\n    const isSelected = task.map((task) =>\n      !task.completed ? { ...task, selected: !task.selected } : task\n    );\n    setTask(isSelected);\n  };\n\n  const handleSelectAll = (e) => {\n    const nodeTask = document.querySelectorAll(\".App-task\");\n    Array.from(nodeTask).map((task) => (task.style = \"border: 2px solid red\"));\n    const isAllSelected = task.map((task) => ({\n      ...task,\n      selected: !task.selected,\n    }));\n    console.log(isAllSelected);\n    setTask(isAllSelected);\n  };\n\n  const handleClickEdit = (e, objTask, editTask) => {\n    const input = document.getElementById(\"input-task-edit\");\n    input.removeAttribute(\"readonly\");\n    const isEdit = task.map((task) =>\n      task.id === objTask.id ? { ...task, edit: !task.edit } : task\n    );\n    setTask(isEdit);\n    e.preventDefault();\n  };\n\n  const handleClickSave = (e, editTask, objTask) => {\n    const editCompleted = task.map((task) =>\n      task.id === objTask.id && task.edit\n        ? { ...task, text: editTask, edit: !task.edit }\n        : task\n    );\n    setTask(editCompleted);\n    e.preventDefault();\n  };\n\n  const handleFilterTask = (e) => {\n    console.log(e.target.checked)\n    const filterFavorite = task.filter(task => task.favorite ? task : null )    \n    // setTask(filterFavorite)\n    e.target.checked ? setTask(filterFavorite) : setTask(allTask)\n  }\n\n  const handleFilterDate = (e) => {\n    const value  = e.target.lastChild.value\n    e.preventDefault()\n    const filterDate = task.filter(task => {\n      const regex = new RegExp(value, \"gi\");\n      return task.date.match(regex)\n    })   \n    \n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav className=\"App-nav\">\n            <ul>\n              <li>\n                <Link to=\"/\">Inicio</Link>\n              </li>\n              <li>\n                <Link to=\"favorites\">Mis favoritos</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n\n        <Switch>\n          <Route path=\"/favorites\">\n            <Favorite favoriteArr={favorite} handleClickDelete={handleClickDelete} />\n          </Route>\n          <Route path=\"/\">\n            {/* <Home /> */}\n            <div className=\"App-content-title-app\">\n              <h1>To-do App</h1>\n            </div>\n\n            <section className=\"App-content-all-todolist\">\n              <aside className=\"App-aside\">\n                <span>Filtrar por:</span>\n                <FilterTask handleFilterTask={handleFilterTask} />\n                <FilterDate handleFilterDate={handleFilterDate}/>\n              </aside>\n\n              <main className=\"App-main\">\n                <section className=\"App-todo\">\n                  <Todo\n                    taskList={task}\n                    handleClickFavorite={handleClickFavorite}\n                    handleClickDelete={handleClickDelete}\n                    handleClickSave={handleClickSave}\n                    handleClickComplete={handleClickComplete}\n                    handleClickEdit={handleClickEdit}\n                  />\n                  <div className=\"content-input-user-task\">\n                    <form\n                      className=\"form-user-input\"\n                      onSubmit={(e) => handleSubmit(e)}\n                    >\n                      <label htmlFor=\"todo-text\">Añade una tarea</label>\n                      <input\n                        id=\"todo-text\"\n                        type=\"text\"\n                        placeholder=\"Añade una tarea\"\n                        name=\"todo-text\"\n                        ref={refInput}\n                      />\n                    </form>\n                  </div>\n                </section>\n\n                <div className=\"App-select-state-task\">\n                  <span\n                    onClick={handleSelectFavorites}\n                    className=\"App-handle-select favorite\"\n                  >\n                    Favoritos\n                  </span>\n                  <span\n                    onClick={handleSelectCompleted}\n                    className=\"App-handle-select completed\"\n                  >\n                    Completados\n                  </span>\n                  <span\n                    onClick={handleSelectNotCompleted}\n                    className=\"App-handle-select no-completed\"\n                  >\n                    No completados\n                  </span>\n                </div>\n\n                <div className=\"App-select-delete-all\">\n                  <span\n                    onClick={handleDeleteSelect}\n                    className=\"App-handle-select select-all\"\n                  >\n                    Eliminar seleccionados\n                  </span>\n                  <span\n                    onClick={handleSelectAll}\n                    className=\"App-handle-select select-all\"\n                  >\n                    Seleccionar todos\n                  </span>\n                  {/* <span className=\"App-handle-select delete-all\">\n                    Borrar todos\n                  </span> */}\n                </div>\n              </main>\n            </section>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}