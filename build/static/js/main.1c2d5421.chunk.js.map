{"version":3,"sources":["components/Task/Task.jsx","components/Favorite/Favorite.jsx","hooks/useSaveData/useSaveData.jsx","components/FilterDate/FilterDate.jsx","components/FilterTask/FilterTask.jsx","components/Todo/Todo.jsx","pages/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Task","objTask","handleClickFavorite","handleClickDelete","handleClickSave","handleClickComplete","handleClickEdit","favoriteIconRef","useRef","spanCompletedStyle","isCheckedStyle","refTask","useState","editTask","setEditTask","inputRef","useEffect","svg","current","span","task","check","favorite","classList","add","remove","completed","checked","selected","ref","className","dateFormat","id","data-taskid","onClick","e","type","onSubmit","preventDefault","name","value","edit","text","onChange","target","readOnly","xlinkHref","Favorite","favoriteArr","map","useSaveData","keyLocal","JSON","parse","localStorage","getItem","arrSaveLocal","setArrSaveLocal","setItem","stringify","FilterDate","handleFilterDate","refValueInit","getDate","refValueEnd","htmlFor","placeholder","FilterTask","handleFilterTask","Todo","taskList","Home","handleSelectFavorites","handleSelectCompleted","handleSelectAll","handleDeleteSelect","handleSelectNotCompleted","handleSubmit","refInput","App","setTask","allTask","setAllTask","setFavorite","currentTarget","dataset","taskid","newArr","filter","newArrFavorite","to","path","errorSpan","document","querySelector","filterFavorite","length","setTimeout","init","end","initD","Date","finalD","dateCreate","taskCreate","date","isFavorite","pushFavorite","console","log","editCompleted","objIsComplete","getElementById","removeAttribute","isEdit","isSelected","nodeTask","querySelectorAll","Array","from","style","isAllSelected","selectedFilter","taskText","taskObject","toLocaleString","toISOString","arrTask","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c2d5421.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Task.css\";\n\nconst Task = ({\n  objTask,\n  handleClickFavorite,\n  handleClickDelete,\n  handleClickSave,\n  handleClickComplete,\n  handleClickEdit,\n}) => {\n  const favoriteIconRef = useRef(null);\n  const spanCompletedStyle = useRef(null);\n  const isCheckedStyle = useRef(null);\n  const refTask = useRef(null);\n  const [editTask, setEditTask] = useState(\"\");\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const svg = favoriteIconRef.current;\n    const span = spanCompletedStyle.current;\n    const task = refTask.current;\n    let check = isCheckedStyle.current;\n\n    objTask.favorite\n      ? svg.classList.add(\"selected\")\n      : svg.classList.remove(\"selected\");\n\n    objTask.completed\n      ? span.classList.add(\"line-completed\")\n      : span.classList.remove(\"line-completed\");\n\n    objTask.completed ? (check.checked = true) : (check.checked = false);\n\n    objTask.favorite && objTask.selected\n      ? task.classList.add(\"selected-favorite\")\n      : task.classList.remove(\"selected-favorite\");\n\n    objTask.completed && objTask.selected\n      ? task.classList.add(\"selected-completed\")\n      : task.classList.remove(\"selected-completed\");\n\n    !objTask.completed && objTask.selected\n      ? task.classList.add(\"selected-not-completed\")\n      : task.classList.remove(\"selected-not-completed\");\n  }, [objTask.completed, objTask.favorite, objTask.selected]);\n\n  const handleChange = (e) => {\n    setEditTask(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div ref={refTask} className=\"App-task\">\n      <span className=\"date-task\">{objTask.dateFormat}</span>\n      <span ref={spanCompletedStyle} className=\"style-completed\"></span>\n      <div className=\"App-check-completed\">\n        <form>\n          <input\n            id=\"input-check\"\n            ref={isCheckedStyle}\n            data-taskid={objTask.id}\n            onClick={(e) => handleClickComplete(e, objTask)}\n            type=\"checkbox\"\n          />\n        </form>\n      </div>\n      <div className=\"App-task-edit\">\n        <form onSubmit={handleSubmit}>\n          <input\n            id=\"input-task-edit\"\n            type=\"text\"\n            name=\"task-edit\"\n            value={objTask.edit ? editTask : objTask.text}\n            onChange={handleChange}\n            readOnly=\"readonly\"\n            ref={inputRef}\n          />\n        </form>\n      </div>\n\n      <div className=\"content-icon-favorite action-task\">\n        <span\n          onClick={(e) => handleClickFavorite(e, objTask)}\n          className=\"icon-favorite\"\n        >\n          <svg ref={favoriteIconRef} className=\"icon icon-star-empty\">\n            <use xlinkHref=\"#icon-star-empty\"></use>\n          </svg>\n        </span>\n      </div>\n\n      <div className=\"content-editar action-task\">\n        <form>\n          <button onClick={(e) => handleClickEdit(e, objTask, editTask)}>\n            {objTask.edit ? \"Guardar\" : \"Editar\"}\n          </button>\n        </form>\n      </div>\n\n      <div className=\"content-guardar action-task\">\n        <form>\n          <button\n            data-taskid={objTask.id}\n            onClick={(e) => handleClickSave(e, editTask, objTask)}\n          >\n            Guardar\n          </button>\n        </form>\n      </div>\n\n      <div className=\"content-icon-delete action-task\">\n        <span\n          data-taskid={objTask.id}\n          onClick={handleClickDelete}\n          className=\"icon-delete\"\n        >\n          <svg className=\"icon icon-bin\">\n            <use xlinkHref=\"#icon-bin\"></use>\n          </svg>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"../Task/Task\";\n\nconst Favorite = ({ favoriteArr, handleClickDelete }) => {\n  // console.log(favoriteArr);\n  // if(!favoriteArr.length) return <div className=\"no-favorite\">Sin favoritos</div>\n  \n  return (\n    <section className=\"App-favorite-section\">\n      {favoriteArr.map((task) => ( \n        <Task\n          key={task.text}\n          objTask={task}\n          // handleClickFavorite={handleClickFavorite}\n          handleClickDelete={handleClickDelete}\n          // handleClickSave={handleClickSave}\n          // handleClickComplete={handleClickComplete}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default Favorite;\n","import { useState } from \"react\";\n\nexport const useSaveData = (keyLocal) => {\n  const [arrSaveLocal, setArrSaveLocal] = useState(\n    JSON.parse(localStorage.getItem(keyLocal)) || []\n  );\n\n  localStorage.setItem(keyLocal, JSON.stringify(arrSaveLocal));\n  return [arrSaveLocal, setArrSaveLocal];\n};","import React, { useRef } from \"react\";\nimport \"./FilterDate.css\";\n\nconst FilterDate = ({ favoriteArr, handleFilterDate, getDate }) => {\n  const refValueInit = useRef(null)\n  const refValueEnd = useRef(null)\n  \n  // const getDate = (e) => {\n  //   const valueInit = refValueInit.current.value\n  //   const valueEnd = refValueEnd.current.value\n\n  //   console.log(valueInit, valueEnd)\n  // }\n  return (\n    <div className=\"App-content-filter-date\">\n      <form >\n        <label htmlFor=\"filter-check\">Buscar por fecha</label>\n        <span className=\"span-date-range-desde\">Desde:</span>\n        <span className=\"span-date\">yy/mm/dd</span>\n        <input ref={refValueInit} placeholder=\"Eg 2021/04/10\" id=\"filter-check-date\" type=\"text\" />\n      </form>\n      <form >\n        <span className=\"span-date-range-hasta\">Hasta:</span>\n        <span className=\"span-date\">yy/mm/dd</span>\n        <input ref={refValueEnd} placeholder=\"Eg 2021/04/20\" id=\"filter-check-date\" type=\"text\" />\n      </form>\n      <span onClick={(e) => handleFilterDate(e, refValueInit.current, refValueEnd.current)}>Buscar</span>\n    </div>\n  );\n};\n\nexport default FilterDate;\n","import React from \"react\"\nimport \"./FilterTask.css\"\n\nconst FilterTask = ({handleFilterTask}) => {  \n  return (\n    <div className=\"App-content-filter\">\n      <span className=\"handle-error-empty-favorite\">No hay favoritos</span>\n      <form>\n        <input onChange={handleFilterTask} id=\"filter-check\" type=\"checkbox\"/>\n        <label htmlFor=\"filter-check\">Favoritos</label>\n      </form>\n    </div>\n  )\n}\n\nexport default FilterTask","import React from \"react\";\nimport Task from \"../Task/Task\";\nimport \"./Todo.css\";\n\nconst Todo = ({\n  taskList,\n  handleClickFavorite,\n  handleClickDelete,\n  handleClickSave,\n  handleClickComplete,\n  handleClickEdit\n}) => {\n  // if(!taskList.length) return <div className=\"empty-task\">Sin tareas</div>\n  return (\n    <section className=\"App-todo-list\">\n      {taskList.map((task) => (\n        <Task\n          key={task.text}\n          objTask={task}\n          handleClickFavorite={handleClickFavorite}\n          handleClickDelete={handleClickDelete}\n          handleClickSave={handleClickSave}\n          handleClickComplete={handleClickComplete}\n          handleClickEdit={handleClickEdit}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default Todo;\n","import React, { useRef, useState } from \"react\";\nimport FilterDate from \"../../components/FilterDate/FilterDate\";\nimport FilterTask from \"../../components/FilterTask/FilterTask\";\nimport Todo from \"../../components/Todo/Todo\";\nimport \"./Home.css\";\n\nconst Home = ({\n  task,\n  handleFilterTask,\n  handleFilterDate,\n  handleClickFavorite,\n  handleClickDelete,\n  handleClickSave,\n  handleClickComplete,\n  handleClickEdit,\n  handleSelectFavorites,\n  handleSelectCompleted,\n  handleSelectAll,\n  handleDeleteSelect,\n  handleSelectNotCompleted,\n  handleSubmit,\n}) => {\n  const refInput = useRef(null);\n\n  return (\n    <>\n      <div className=\"App-content-title-app\">\n        <h1>To-do App</h1>\n      </div>\n\n      <section className=\"App-content-all-todolist\">\n        <aside className=\"App-aside\">\n          <span>Filtrar por:</span>\n          <FilterTask handleFilterTask={handleFilterTask} />\n          <FilterDate handleFilterDate={handleFilterDate}  />\n        </aside>\n\n        <main className=\"App-main\">\n          <section className=\"App-todo\">\n            <Todo\n              taskList={task}\n              handleClickFavorite={handleClickFavorite}\n              handleClickDelete={handleClickDelete}\n              handleClickSave={handleClickSave}\n              handleClickComplete={handleClickComplete}\n              handleClickEdit={handleClickEdit}\n            />\n            <div className=\"content-input-user-task\">\n              <form\n                className=\"form-user-input\"\n                onSubmit={(e) => handleSubmit(e, refInput)}\n              >\n                <label htmlFor=\"todo-text\">Añade una tarea</label>\n                <input\n                  id=\"todo-text\"\n                  type=\"text\"\n                  placeholder=\"Añade una tarea\"\n                  name=\"todo-text\"\n                  ref={refInput}\n                />\n              </form>\n            </div>\n          </section>\n\n          <div className=\"App-select-state-task\">\n            <span\n              onClick={handleSelectFavorites}\n              className=\"App-handle-select favorite\"\n            >\n              Favoritos\n            </span>\n            <span\n              onClick={handleSelectCompleted}\n              className=\"App-handle-select completed\"\n            >\n              Completados\n            </span>\n            <span\n              onClick={handleSelectNotCompleted}\n              className=\"App-handle-select no-completed\"\n            >\n              No completados\n            </span>\n          </div>\n\n          <div className=\"App-select-delete-all\">\n            <span\n              onClick={handleDeleteSelect}\n              className=\"App-handle-select select-all\"\n            >\n              Eliminar seleccionados\n            </span>\n            <span\n              onClick={handleSelectAll}\n              className=\"App-handle-select select-all\"\n            >\n              Seleccionar todos\n            </span>\n          </div>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Favorite from \"./components/Favorite/Favorite\";\nimport { useSaveData } from \"./hooks/useSaveData/useSaveData\";\nimport Home from \"./pages/Home/Home\";\nimport \"./App.css\";\n\nfunction App() {\n  const [task, setTask] = useSaveData(\"task\");\n  const [allTask, setAllTask] = useSaveData(\"alltask\");\n  const [favorite, setFavorite] = useSaveData(\"favorite\");\n\n  const handleSubmit = (e, refInput) => {\n    const date = new Date();\n    const taskText = refInput.current.value;\n    const taskObject = {\n      id: taskText,\n      text: taskText,\n      completed: false,\n      favorite: false,\n      selected: false,\n      edit: false,\n      dateFormat: date.toLocaleString(),\n      taskCreate: date.toISOString(),\n    };\n    const arrTask = task.concat([taskObject]);\n    setAllTask(arrTask);\n    setTask(arrTask);\n    refInput.current.value = \"\";\n    e.preventDefault();\n  };\n\n  const handleClickComplete = (e) => {\n    const id = e.target.dataset.taskid;\n    const objIsComplete = task.map((task) =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTask(objIsComplete);\n  };\n\n  const handleClickFavorite = (e, objTask) => {\n    const id = objTask.id;\n    const isFavorite = task.map((task) =>\n      task.id === id ? { ...task, favorite: !task.favorite } : task\n    );\n\n    const pushFavorite = isFavorite.filter((task) =>\n      task.favorite ? task : null\n    );\n    console.log(isFavorite);\n    console.log(pushFavorite);\n\n    setTask(isFavorite);\n    setFavorite(pushFavorite);\n    setAllTask(isFavorite);\n  };\n\n  const handleClickDelete = (e) => {\n    const id = e.currentTarget.dataset.taskid;\n    const newArr = task.filter((task) => task.id !== id);\n    const newArrFavorite = favorite.filter((task) => task.id !== id);\n    setTask(newArr);\n    setFavorite(newArrFavorite);\n  };\n\n  const handleSelectFavorites = (e) => {\n    const isSelected = task.map((task) =>\n      task.favorite ? { ...task, selected: !task.selected } : task\n    );\n\n    setTask(isSelected);\n  };\n\n  const handleDeleteSelect = (e) => {\n    const selectedFilter = task.filter((task) => !task.selected);\n    setTask(selectedFilter);\n  };\n\n  const handleSelectCompleted = (e) => {\n    const isSelected = task.map((task) =>\n      task.completed ? { ...task, selected: !task.selected } : task\n    );\n    console.log(isSelected);\n    setTask(isSelected);\n  };\n\n  const handleSelectNotCompleted = (e) => {\n    const isSelected = task.map((task) =>\n      !task.completed ? { ...task, selected: !task.selected } : task\n    );\n    setTask(isSelected);\n  };\n\n  const handleSelectAll = (e) => {\n    const nodeTask = document.querySelectorAll(\".App-task\");\n    Array.from(nodeTask).map((task) => (task.style = \"border: 2px solid red\"));\n    const isAllSelected = task.map((task) => ({\n      ...task,\n      selected: !task.selected,\n    }));\n    console.log(isAllSelected);\n    setTask(isAllSelected);\n  };\n\n  const handleClickEdit = (e, objTask, editTask) => {\n    const input = document.getElementById(\"input-task-edit\");\n    input.removeAttribute(\"readonly\");\n    const isEdit = task.map((task) =>\n      task.id === objTask.id ? { ...task, edit: !task.edit } : task\n    );\n    setTask(isEdit);\n    e.preventDefault();\n  };\n\n  const handleClickSave = (e, editTask, objTask) => {\n    const editCompleted = task.map((task) =>\n      task.id === objTask.id && task.edit\n        ? { ...task, text: editTask, edit: !task.edit }\n        : task\n    );\n    setTask(editCompleted);\n    e.preventDefault();\n  };\n\n  const handleFilterTask = (e) => {\n    const errorSpan = document.querySelector(\".handle-error-empty-favorite\");\n    const filterFavorite = task.filter((task) => (task.favorite ? task : null));\n    if (!filterFavorite.length) {\n      errorSpan.classList.add(\"display-error-favorite\");\n      e.target.checked = false\n      setTimeout(() => {\n        errorSpan.classList.remove(\"display-error-favorite\");\n      }, 500);\n      return;\n    }\n    e.target.checked ? setTask(filterFavorite) : setTask(allTask);\n  };\n\n  const handleFilterDate = (e, init, end) => {\n    const initD = new Date(init.value);\n    const finalD = new Date(end.value);\n    const filterDate = task.filter((task) => {\n      const dateCreate = task.taskCreate;\n      const date = new Date(dateCreate);\n      if (date >= initD && date <= finalD) return task;\n    });\n    e.preventDefault();\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav className=\"App-nav\">\n            <ul>\n              <li>\n                <Link to=\"/\">Inicio</Link>\n              </li>\n              <li>\n                <Link to=\"favorites\">Mis favoritos</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n\n        <Switch>\n          <Route path=\"/favorites\">\n            <Favorite\n              favoriteArr={favorite}\n              handleClickDelete={handleClickDelete}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Home\n              task={task}\n              handleFilterTask={handleFilterTask}\n              handleFilterDate={handleFilterDate}\n              handleClickFavorite={handleClickFavorite}\n              handleClickDelete={handleClickDelete}\n              handleClickSave={handleClickSave}\n              handleClickComplete={handleClickComplete}\n              handleClickEdit={handleClickEdit}\n              handleSelectFavorites={handleSelectFavorites}\n              handleSelectCompleted={handleSelectCompleted}\n              handleSelectAll={handleSelectAll}\n              handleDeleteSelect={handleDeleteSelect}\n              handleSelectNotCompleted={handleSelectNotCompleted}\n              handleSubmit={handleSubmit}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}